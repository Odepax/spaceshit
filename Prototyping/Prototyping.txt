Name =
Object Definition Language & Code Generation Ecosystem
Ob                   g a            n    i      s    m (from oRganism)

Obganism Files:
*.obo - Obganism Object
*.obs - Obganism System
*.obc - Obganism Configuration
*.obv - Obganism Value

Obganism
   Main ... Odepax/obganism.git
      Prototyping/
         Prototyping.mdj
         Prototyping.svg
         Prototyping.txt
      Website/
         index.html
         Publish-PresentationWebsite.ps1
         pbpw.sh
   Wiki ... Odepax/obganism.wiki.git
   Parsers/
      Java ... Odepax/obganism-parser-java.git
      DotNet ... Odepax/obganism-parser-dotnet.git
      Javascript ... Odepax/obganism-parser-js.git

class TokenCursor(...)
   nextIs<T : Token>() => bool
   next<T : Token>() => T || ParsingException
   next() => Token
   expect<T : Token>() || ParsingException
   skipWhile<...T : Token>() => skipped: List<Token>
   skipUntil<...T : Token>() => skipped: List<Token>
}

web::see projects\_archive\StandaloneDocumentGeneration\ZZZ_gxml\_aygix-web-graphic-chart-revision-1

person {
   address {
      street : string -- !empty
      city : string -- !empty
      zip : int -- positive

      position : point -- optional { x : float, y : float }
      ----
      (street, zip)
      ----
      raw distance(other : address) : float
   } -- ^ tostring

   first name : string -- !empty
   last name : string -- !empty
   full name : string -- computed

   email : string -- pattern(/^[a-zA-Z0-9_.-]+@[a-zA-Z0-9_.-]+\.[a-z]{2,4}$/)

   birth date : calendar
   age : int -- computed
   is probably dead : boolean -- computed

   friends : collection of person
   best friend : person -- optional
   
   ----
   
   !(best friend)
   !(friends, best friend)
   !(friends)
   
   ----
   
   eat(food)
   is friend with(other : person) : boolean

   combine(
      outer : enumerable of outer -- this
      inner : enumerable of inner
      combiner : function of (outer, inner) : result
      selector : function of result : tuple of (int, int)
      final mapper : dictionary of [tuple of (int, int)] => string
   ) : enumerable of string -- template("outer", "inner", "result")
} .java -- bean check !tostring

----------------------------------------

 declare WHAT
document WHY*
    code HOW

*: Also document the way it integrates within the whole. Encourage discovery.
